<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE generatorConfiguration PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN" "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd" >  
<generatorConfiguration>  
    <!-- 引入配置文件 -->  
    <properties resource="generator.properties"/>  
      
    <!-- 指定数据连接驱动jar地址 -->  
    <!--<classPathEntry location="mysql-connector-java-5.1.38.jar" />-->
    <!--<classPathEntry location="${classPath}" />  -->

    <!-- 一个数据库一个context -->  
    <context id="infoGuardian" targetRuntime="MyBatis3">
        <!-- 此处是将UserMapper.xml改名为UserDao.xml 当然 想改成什么都行~ -->
        <plugin type="org.mybatis.generator.plugins.RenameExampleClassPlugin">
        <!--<plugin type="org.mybatis.generator.plugins.rename.RenameSqlMapperPlugin">-->
            <property name="searchString" value="Example$" />
            <property name="replaceString" value="Dao" />
        </plugin>

        <!-- 此处是将UserMapper改名为UserDao 接口 当然 想改成什么都行~  -->
        <!--<plugin type="org.mybatis.generator.plugins.RenameExampleClassPlugin">-->
            <!--<property name="searchString" value="Example$" />-->
            <!--<property name="replaceString" value="Dao" />-->
        <!--</plugin>-->

        <!-- 注释 自定义-->
        <commentGenerator type="com.gao.MyCommentGenerator">
        </commentGenerator>
        <!-- 注释 默认-->
        <!--<commentGenerator >
            <property name="suppressAllComments" value="false"/>&lt;!&ndash; 是否取消注释 &ndash;&gt;
            <property name="suppressDate" value="false" /> &lt;!&ndash; 是否生成注释代时间戳&ndash;&gt;
        </commentGenerator>  -->
          
        <!-- jdbc连接 -->  
        <jdbcConnection driverClass="${jdbc_driver}"  
            connectionURL="${jdbc_url}" userId="${jdbc_user}"  
            password="${jdbc_password}" />  
          
        <!-- 类型转换 -->  
        <javaTypeResolver>  
            <!-- 是否使用bigDecimal， false可自动转化以下类型（Long, Integer, Short, etc.） -->  
            <property name="forceBigDecimals" value="false"/>  
        </javaTypeResolver>  
          
        <!-- 生成实体类地址 -->    
        <javaModelGenerator targetPackage="${package}.entity"
            targetProject="${project}" >
        <!--<javaModelGenerator targetPackage="com.fahai.web.entity"
            targetProject="${project}" >-->
            <!-- 是否在当前路径下新加一层schema,eg：fase路径cn.ffcs.test.domain"， true:cn.ffcs.test.domain".[schemaName] -->  
            <property name="enableSubPackages" value="false"/>  
            <!-- 是否针对string类型的字段在set的时候进行trim调用 -->  
            <property name="trimStrings" value="true"/>  
        </javaModelGenerator>  

        <!-- 生成mapxml文件 -->  
        <sqlMapGenerator targetPackage="mapper"
            targetProject="${resource}" >  
            <!-- 是否在当前路径下新加一层schema,eg：fase路径cn.ffcs.test.domain"， true:cn.ffcs.test.domain".[schemaName] -->  
            <property name="enableSubPackages" value="false" />  
        </sqlMapGenerator>  
          
        <!-- 生成mapxml对应client，也就是接口dao -->      
        <javaClientGenerator targetPackage="${package}.dao"
            targetProject="${project}" type="XMLMAPPER" >  
            <!-- 是否在当前路径下新加一层schema,eg：fase路径cn.ffcs.test.domain"， true:cn.ffcs.test.domain".[schemaName] -->  
            <property name="enableSubPackages" value="false" />
        </javaClientGenerator>

        <!-- 配置表信息，这里没生成一张表，这里需要改变一次对应表名 -->
        <table schema="${schema}" tableName="${tableName}"
            domainObjectName="${domainObjectName}" enableCountByExample="false"
            enableDeleteByExample="false" enableSelectByExample="false"
            enableUpdateByExample="false">  
            <!-- schema即为数据库名 tableName为对应的数据库表 domainObjectName是要生成的实体类 enable*ByExample   
                是否生成 example类   -->  
              
            <!-- 忽略列，不生成bean 字段   
            <ignoreColumn column="FRED" />-->  
            <!-- 指定列的java数据类型   
            <columnOverride column="LONG_VARCHAR_FIELD" jdbcType="VARCHAR" />-->  
        </table>  
  
    </context>  
</generatorConfiguration>